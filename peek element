class Solution {
    public int findPeakUtil(int[] nums, int low, int high, int n) {
        int mid = low + (high-low)/2;
       if ((mid == 0 || nums[mid - 1] <= nums[mid]) 
           && (mid == n - 1 || nums[mid + 1] <= nums[mid])) 
            return mid; 
        else if (mid > 0 && nums[mid - 1] > nums[mid]) 
            return findPeakUtil(nums, low, (mid - 1), n);
         else
            return findPeakUtil(nums, (mid + 1), high, n);
    }
    public int findPeakElement(int[] nums) {
        return findPeakUtil(nums, 0, nums.length-1, nums.length); 
    }
}
